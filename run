Loading /usr/share/sbt/bin/sbt-launch-lib.bash
[0m[[0minfo[0m] [0mLoading global plugins from /home/julian/.sbt/plugins[0m
[0m[[0minfo[0m] [0mLoading project definition from /home/julian/Dropbox/salat-avro/project[0m
[0m[[0minfo[0m] [0mSet current project to salat-avro (in build file:/home/julian/Dropbox/salat-avro/)[0m
[0m[[33mwarn[0m] [0mCredentials file /home/julian/.ivy2/.banno_credentials does not exist[0m
[0m[[0minfo[0m] [0mCompiling 1 Scala source to /home/julian/Dropbox/salat-avro/target/scala-2.9.1/classes...[0m
[0m[[0minfo[0m] [0mRunning debug.Main [0m
avro made a package object avro
package object avro grater 
avro context, it was suitable models.MyRecord
avro resolve models.MyRecord
avro package resolve trying
avro models.MyRecord
avro clazz 0 null
avro clazz 0 class models.MyRecord
class ain't null: class models.MyRecord
avro accept
+++++++++++++++++++++++++++
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
+++++++++++++++++++++++++++
made a SingleAvroGrater
$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9)
package object avro grater 
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
avro context, it was suitable com.banno.salat.avro.test.models.Node
avro resolve com.banno.salat.avro.test.models.Node
avro package resolve trying
avro com.banno.salat.avro.test.models.Node
avro clazz 0 null
avro clazz 0 class com.banno.salat.avro.test.models.Node
class ain't null: class com.banno.salat.avro.test.models.Node
avro accept
+++++++++++++++++++++++++++
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
+++++++++++++++++++++++++++
made a SingleAvroGrater
package object avro grater 
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
avro context, it was suitable com.banno.salat.avro.test.models.ManyTrees
avro resolve com.banno.salat.avro.test.models.ManyTrees
avro package resolve trying
avro com.banno.salat.avro.test.models.ManyTrees
avro clazz 0 null
avro clazz 0 class com.banno.salat.avro.test.models.ManyTrees
class ain't null: class com.banno.salat.avro.test.models.ManyTrees
avro accept
+++++++++++++++++++++++++++
(com.banno.salat.avro.test.models.ManyTrees,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
+++++++++++++++++++++++++++
made a SingleAvroGrater
package object avro grater 
(com.banno.salat.avro.test.models.ManyTrees,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
avro context, it was suitable com.banno.salat.avro.test.models.End
avro resolve com.banno.salat.avro.test.models.End
avro package resolve trying
avro com.banno.salat.avro.test.models.End
avro clazz 0 null
avro clazz 0 class com.banno.salat.avro.test.models.End
class ain't null: class com.banno.salat.avro.test.models.End
avro accept
+++++++++++++++++++++++++++
(com.banno.salat.avro.test.models.ManyTrees,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(com.banno.salat.avro.test.models.End,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
+++++++++++++++++++++++++++
made a SingleAvroGrater
package object avro grater 
called singleavrograter's asAvroSchema
made a singleAvroSchema
avro schema AvroSalatSchema
avro schema schemaFor
avro schema schemaFields from grater $anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9)
avro _indexedFields ClassSymbol(Node, owner=com.banno.salat.avro.test.models, flags=40, info=15 ,None)
MethodSymbol(left, owner=0, flags=29400200, info=42 ,None) 0
(com.banno.salat.avro.test.models.ManyTrees,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(com.banno.salat.avro.test.models.End,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
avro context, it was suitable com.banno.salat.avro.test.models.Tree
avro resolve com.banno.salat.avro.test.models.Tree
avro package resolve trying
avro com.banno.salat.avro.test.models.Tree
avro clazz 0 null
avro clazz 0 interface com.banno.salat.avro.test.models.Tree
class ain't null: interface com.banno.salat.avro.test.models.Tree
avro accept
+++++++++++++++++++++++++++
(com.banno.salat.avro.test.models.ManyTrees,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(com.banno.salat.avro.test.models.Tree,$anonfun$lookup_$qmark$1$$anon$2(interface com.banno.salat.avro.test.models.Tree @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(com.banno.salat.avro.test.models.End,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
+++++++++++++++++++++++++++
a proxyavrograter was made
MethodSymbol(right, owner=0, flags=29400200, info=42 ,None) 1
avro schema schemaTypeFor
avro schema gonna match path com.banno.salat.avro.test.models.Tree
typeRef = TypeRefType(ThisType(com.banno.salat.avro.test.models),com.banno.salat.avro.test.models.Tree,List())
symbol = com.banno.salat.avro.test.models.Tree
symbol.path = com.banno.salat.avro.test.models.Tree
typeArgs = List()
avrocontext lookup(String) com.banno.salat.avro.test.models.Tree
Some($anonfun$lookup_$qmark$1$$anon$2(interface com.banno.salat.avro.test.models.Tree @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
in context: Some($anonfun$lookup_$qmark$1$$anon$2(interface com.banno.salat.avro.test.models.Tree @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
avrocontext lookup(String) com.banno.salat.avro.test.models.Tree
Some($anonfun$lookup_$qmark$1$$anon$2(interface com.banno.salat.avro.test.models.Tree @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
avro typematchers made a IsTraversable
avro typematchers istraversable unapply TypeRefType(ThisType(com.banno.salat.avro.test.models),com.banno.salat.avro.test.models.Tree,List())
made an avro TypeMatchers
avro typematchers  matchesTraversable TypeRefType(ThisType(com.banno.salat.avro.test.models),com.banno.salat.avro.test.models.Tree,List())
avro typematchers matchesTraversable found none 
avro proxyavrograter asSingleAvroGrater was called 
ProxyAvroGrater knownSubclassGraters
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.ManyTrees
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.Node
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.End
proxyavro knownSubclassGraters: List($anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9), $anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9), $anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
proxyavro knownSubclassGraters Mapped: 
ProxyAvroGrater knownSubclassGraters
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.ManyTrees
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.Node
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.End
ProxyAvroGrater knownSubclassGraters
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.ManyTrees
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.Node
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.End
root $anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9)
root appended List($anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9), $anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9), $anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
made a singleAvroSchema
avro schema schemaFor
avro schema schemaFields from grater $anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9)
avro _indexedFields ClassSymbol(End, owner=com.banno.salat.avro.test.models, flags=40, info=15 ,None)
MethodSymbol(value, owner=0, flags=29400200, info=42 ,None) 0
(com.banno.salat.avro.test.models.ManyTrees,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(com.banno.salat.avro.test.models.Tree,$anonfun$lookup_$qmark$1$$anon$2(interface com.banno.salat.avro.test.models.Tree @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(com.banno.salat.avro.test.models.End,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
wasn't suitable
avro schema schemaTypeFor
avro schema gonna match path scala.Int
typeRef = TypeRefType(ThisType(scala),scala.Int,List())
symbol = scala.Int
symbol.path = scala.Int
typeArgs = List()
avrocontext lookup(String) scala.Int
None
in context: None
avrocontext lookup(String) scala.Int
None
made a singleAvroSchema
avro schema schemaFor
avro schema schemaFields from grater $anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9)
avro _indexedFields ClassSymbol(ManyTrees, owner=com.banno.salat.avro.test.models, flags=40, info=15 ,None)
MethodSymbol(value, owner=0, flags=29400200, info=42 ,None) 0
(com.banno.salat.avro.test.models.ManyTrees,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(com.banno.salat.avro.test.models.Tree,$anonfun$lookup_$qmark$1$$anon$2(interface com.banno.salat.avro.test.models.Tree @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
(com.banno.salat.avro.test.models.End,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
wasn't suitable
MethodSymbol(nodes, owner=0, flags=29400200, info=50 ,None) 1
avro schema schemaTypeFor
avro schema gonna match path scala.Int
typeRef = TypeRefType(ThisType(scala),scala.Int,List())
symbol = scala.Int
symbol.path = scala.Int
typeArgs = List()
avrocontext lookup(String) scala.Int
None
in context: None
avrocontext lookup(String) scala.Int
None
avro schema schemaTypeFor
avro schema gonna match path scala.package.Seq
typeRef = TypeRefType(SingleType(SingleType(ThisType(<no symbol>.<root>),scala),scala.package),scala.package.Seq,List(TypeRefType(ThisType(com.banno.salat.avro.test.models),com.banno.salat.avro.test.models.Tree,List())))
symbol = scala.package.Seq
symbol.path = scala.package.Seq
typeArgs = List(TypeRefType(ThisType(com.banno.salat.avro.test.models),com.banno.salat.avro.test.models.Tree,List()))
avrocontext lookup(String) scala.package.Seq
None
in context: None
avrocontext lookup(String) scala.package.Seq
None
avro typematchers istraversable unapply TypeRefType(SingleType(SingleType(ThisType(<no symbol>.<root>),scala),scala.package),scala.package.Seq,List(TypeRefType(ThisType(com.banno.salat.avro.test.models),com.banno.salat.avro.test.models.Tree,List())))
avro typematchers  matchesTraversable TypeRefType(SingleType(SingleType(ThisType(<no symbol>.<root>),scala),scala.package),scala.package.Seq,List(TypeRefType(ThisType(com.banno.salat.avro.test.models),com.banno.salat.avro.test.models.Tree,List())))
avro typematchers matchesTraversable found onescala.package.Seq
schema found a traversible
avro schema schemaTypeFor
avro schema gonna match path com.banno.salat.avro.test.models.Tree
typeRef = TypeRefType(ThisType(com.banno.salat.avro.test.models),com.banno.salat.avro.test.models.Tree,List())
symbol = com.banno.salat.avro.test.models.Tree
symbol.path = com.banno.salat.avro.test.models.Tree
typeArgs = List()
avrocontext lookup(String) com.banno.salat.avro.test.models.Tree
Some($anonfun$lookup_$qmark$1$$anon$2(interface com.banno.salat.avro.test.models.Tree @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
in context: Some($anonfun$lookup_$qmark$1$$anon$2(interface com.banno.salat.avro.test.models.Tree @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
avrocontext lookup(String) com.banno.salat.avro.test.models.Tree
Some($anonfun$lookup_$qmark$1$$anon$2(interface com.banno.salat.avro.test.models.Tree @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
avro typematchers istraversable unapply TypeRefType(ThisType(com.banno.salat.avro.test.models),com.banno.salat.avro.test.models.Tree,List())
avro typematchers  matchesTraversable TypeRefType(ThisType(com.banno.salat.avro.test.models),com.banno.salat.avro.test.models.Tree,List())
avro typematchers matchesTraversable found none 
avro proxyavrograter asSingleAvroGrater was called 
ProxyAvroGrater knownSubclassGraters
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.ManyTrees
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.Node
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.End
proxyavro knownSubclassGraters: List($anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9), $anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9), $anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
proxyavro knownSubclassGraters Mapped: 
ProxyAvroGrater knownSubclassGraters
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.ManyTrees
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.Node
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.End
ProxyAvroGrater knownSubclassGraters
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.ManyTrees
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.Node
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.End
root $anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9)
root appended List($anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9), $anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9), $anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
made a singleAvroSchema
avro schema schemaFor
made a singleAvroSchema
avro schema schemaFor
made a singleAvroSchema
avro schema schemaFor
made a singleAvroSchema
avro schema schemaFor
avro schema schemaTypeFor
avro schema gonna match path com.banno.salat.avro.test.models.Tree
typeRef = TypeRefType(ThisType(com.banno.salat.avro.test.models),com.banno.salat.avro.test.models.Tree,List())
symbol = com.banno.salat.avro.test.models.Tree
symbol.path = com.banno.salat.avro.test.models.Tree
typeArgs = List()
avrocontext lookup(String) com.banno.salat.avro.test.models.Tree
Some($anonfun$lookup_$qmark$1$$anon$2(interface com.banno.salat.avro.test.models.Tree @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
in context: Some($anonfun$lookup_$qmark$1$$anon$2(interface com.banno.salat.avro.test.models.Tree @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
avrocontext lookup(String) com.banno.salat.avro.test.models.Tree
Some($anonfun$lookup_$qmark$1$$anon$2(interface com.banno.salat.avro.test.models.Tree @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
avro typematchers istraversable unapply TypeRefType(ThisType(com.banno.salat.avro.test.models),com.banno.salat.avro.test.models.Tree,List())
avro typematchers  matchesTraversable TypeRefType(ThisType(com.banno.salat.avro.test.models),com.banno.salat.avro.test.models.Tree,List())
avro typematchers matchesTraversable found none 
avro proxyavrograter asSingleAvroGrater was called 
ProxyAvroGrater knownSubclassGraters
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.ManyTrees
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.Node
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.End
proxyavro knownSubclassGraters: List($anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9), $anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9), $anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
proxyavro knownSubclassGraters Mapped: 
ProxyAvroGrater knownSubclassGraters
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.ManyTrees
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.Node
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.End
ProxyAvroGrater knownSubclassGraters
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.ManyTrees
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.Node
proxy knownsub interface com.banno.salat.avro.test.models.Tree com.banno.salat.avro.test.models.End
root $anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9)
root appended List($anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9), $anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9), $anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@3e36d7f9))
made a singleAvroSchema
avro schema schemaFor
made a singleAvroSchema
avro schema schemaFor
made a singleAvroSchema
avro schema schemaFor
true
[{"type":"record","name":"Node","namespace":"com.banno.salat.avro.test.models","doc":"","fields":[{"name":"left","type":[{"type":"record","name":"End","doc":"","fields":[{"name":"value","type":"int"}]},{"type":"record","name":"ManyTrees","doc":"","fields":[{"name":"value","type":"int"},{"name":"nodes","type":{"type":"array","items":["End","ManyTrees","Node"]}}]},"Node"]},{"name":"right","type":["End","ManyTrees","Node"]}]}]
true
true
true
true
true
true
true
true
true
true
[0m[[32msuccess[0m] [0mTotal time: 17 s, completed Nov 23, 2013 10:30:54 PM[0m

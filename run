Loading /usr/share/sbt/bin/sbt-launch-lib.bash
[0m[[0minfo[0m] [0mLoading global plugins from /home/julian/.sbt/plugins[0m
[0m[[0minfo[0m] [0mLoading project definition from /home/julian/Dropbox/salat-avro/project[0m
[0m[[0minfo[0m] [0mSet current project to salat-avro (in build file:/home/julian/Dropbox/salat-avro/)[0m
[0m[[33mwarn[0m] [0mCredentials file /home/julian/.ivy2/.banno_credentials does not exist[0m
[0m[[0minfo[0m] [0mCompiling 1 Scala source to /home/julian/Dropbox/salat-avro/target/scala-2.9.1/classes...[0m
[0m[[0minfo[0m] [0mRunning debug.Main [0m
avro made a package object avro
package object avro grater 
avro context, it was suitable models.MyRecord
avro resolve models.MyRecord
avro package resolve trying
avro models.MyRecord
avro clazz 0 null
avro clazz 0 class models.MyRecord
class ain't null: class models.MyRecord
avro accept
+++++++++++++++++++++++++++
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
+++++++++++++++++++++++++++
made a SingleAvroGrater
$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@1f60cd93)
package object avro grater 
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
avro context, it was suitable com.banno.salat.avro.test.models.Node
avro resolve com.banno.salat.avro.test.models.Node
avro package resolve trying
avro com.banno.salat.avro.test.models.Node
avro clazz 0 null
avro clazz 0 class com.banno.salat.avro.test.models.Node
class ain't null: class com.banno.salat.avro.test.models.Node
avro accept
+++++++++++++++++++++++++++
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
+++++++++++++++++++++++++++
made a SingleAvroGrater
package object avro grater 
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
avro context, it was suitable com.banno.salat.avro.test.models.ManyTrees
avro resolve com.banno.salat.avro.test.models.ManyTrees
avro package resolve trying
avro com.banno.salat.avro.test.models.ManyTrees
avro clazz 0 null
avro clazz 0 class com.banno.salat.avro.test.models.ManyTrees
class ain't null: class com.banno.salat.avro.test.models.ManyTrees
avro accept
+++++++++++++++++++++++++++
(com.banno.salat.avro.test.models.ManyTrees,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
+++++++++++++++++++++++++++
made a SingleAvroGrater
package object avro grater 
(com.banno.salat.avro.test.models.ManyTrees,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
avro context, it was suitable com.banno.salat.avro.test.models.End
avro resolve com.banno.salat.avro.test.models.End
avro package resolve trying
avro com.banno.salat.avro.test.models.End
avro clazz 0 null
avro clazz 0 class com.banno.salat.avro.test.models.End
class ain't null: class com.banno.salat.avro.test.models.End
avro accept
+++++++++++++++++++++++++++
(com.banno.salat.avro.test.models.ManyTrees,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.End,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
+++++++++++++++++++++++++++
made a SingleAvroGrater
package object avro grater 
(com.banno.salat.avro.test.models.ManyTrees,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.End,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
avro context, it was suitable com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait
avro resolve com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait
avro package resolve trying
avro com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait
avro clazz 0 null
avro clazz 0 class com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait
class ain't null: class com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait
avro accept
+++++++++++++++++++++++++++
(com.banno.salat.avro.test.models.ManyTrees,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.End,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
+++++++++++++++++++++++++++
made a SingleAvroGrater
package object avro grater 
(com.banno.salat.avro.test.models.ManyTrees,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.End,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
avro context, it was suitable com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait
avro resolve com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait
avro package resolve trying
avro com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait
avro clazz 0 null
avro clazz 0 class com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait
class ain't null: class com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait
avro accept
+++++++++++++++++++++++++++
(com.banno.salat.avro.test.models.ManyTrees,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.End,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
+++++++++++++++++++++++++++
made a SingleAvroGrater
package object avro grater 
(com.banno.salat.avro.test.models.ManyTrees,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.End,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
avro context, it was suitable com.banno.salat.avro.test.models.SomeContainerClass
avro resolve com.banno.salat.avro.test.models.SomeContainerClass
avro package resolve trying
avro com.banno.salat.avro.test.models.SomeContainerClass
avro clazz 0 null
avro clazz 0 class com.banno.salat.avro.test.models.SomeContainerClass
class ain't null: class com.banno.salat.avro.test.models.SomeContainerClass
avro accept
+++++++++++++++++++++++++++
(com.banno.salat.avro.test.models.ManyTrees,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.SomeContainerClass,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.SomeContainerClass @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.End,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
+++++++++++++++++++++++++++
made a SingleAvroGrater
called singleavrograter's asAvroSchema
made a singleAvroSchema
avro schema AvroSalatSchema
avro schema schemaFor
avro schema schemaFields from grater $anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.SomeContainerClass @ com.banno.salat.avro.global.package$$anon$1@1f60cd93)
avro _indexedFields ClassSymbol(SomeContainerClass, owner=com.banno.salat.avro.test.models, flags=40, info=15 ,None)
MethodSymbol(e, owner=0, flags=29400200, info=38 ,None) 0
(com.banno.salat.avro.test.models.ManyTrees,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.SomeContainerClass,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.SomeContainerClass @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.End,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
wasn't suitable
(com.banno.salat.avro.test.models.ManyTrees,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.SomeContainerClass,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.SomeContainerClass @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.End,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
wasn't suitable
MethodSymbol(theListWhichNeedsToBeTested, owner=0, flags=29400200, info=50 ,None) 1
(com.banno.salat.avro.test.models.ManyTrees,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.SomeContainerClass,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.SomeContainerClass @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.End,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
avro context, it was suitable com.banno.salat.avro.test.models.SomeCommonTrait
avro resolve com.banno.salat.avro.test.models.SomeCommonTrait
avro package resolve trying
avro com.banno.salat.avro.test.models.SomeCommonTrait
avro clazz 0 null
avro clazz 0 interface com.banno.salat.avro.test.models.SomeCommonTrait
class ain't null: interface com.banno.salat.avro.test.models.SomeCommonTrait
avro accept
+++++++++++++++++++++++++++
(com.banno.salat.avro.test.models.SomeCommonTrait,$anonfun$lookup_$qmark$1$$anon$2(interface com.banno.salat.avro.test.models.SomeCommonTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.ManyTrees,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.SomeContainerClass,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.SomeContainerClass @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.End,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
+++++++++++++++++++++++++++
a proxyavrograter was made
avro schema schemaTypeFor
avro schema gonna match path scala.Predef.String
typeRef = TypeRefType(SingleType(ThisType(scala),scala.Predef),scala.Predef.String,List())
symbol = scala.Predef.String
symbol.path = scala.Predef.String
typeArgs = List()
avrocontext lookup(String) scala.Predef.String
None
in context: None
avrocontext lookup(String) scala.Predef.String
None
avro shcmea matched a string 
avro schema schemaTypeFor
avro schema gonna match path scala.package.List
typeRef = TypeRefType(SingleType(SingleType(ThisType(<no symbol>.<root>),scala),scala.package),scala.package.List,List(TypeRefType(ThisType(com.banno.salat.avro.test.models),com.banno.salat.avro.test.models.SomeCommonTrait,List())))
symbol = scala.package.List
symbol.path = scala.package.List
typeArgs = List(TypeRefType(ThisType(com.banno.salat.avro.test.models),com.banno.salat.avro.test.models.SomeCommonTrait,List()))
avrocontext lookup(String) scala.package.List
None
in context: None
avrocontext lookup(String) scala.package.List
None
avro typematchers made a IsTraversable
avro typematchers istraversable unapply TypeRefType(SingleType(SingleType(ThisType(<no symbol>.<root>),scala),scala.package),scala.package.List,List(TypeRefType(ThisType(com.banno.salat.avro.test.models),com.banno.salat.avro.test.models.SomeCommonTrait,List())))
made an avro TypeMatchers
avro typematchers  matchesTraversable TypeRefType(SingleType(SingleType(ThisType(<no symbol>.<root>),scala),scala.package),scala.package.List,List(TypeRefType(ThisType(com.banno.salat.avro.test.models),com.banno.salat.avro.test.models.SomeCommonTrait,List())))
avro typematchers matchesTraversable found onescala.package.List
schema found a traversible
avro schema schemaTypeFor
avro schema gonna match path com.banno.salat.avro.test.models.SomeCommonTrait
typeRef = TypeRefType(ThisType(com.banno.salat.avro.test.models),com.banno.salat.avro.test.models.SomeCommonTrait,List())
symbol = com.banno.salat.avro.test.models.SomeCommonTrait
symbol.path = com.banno.salat.avro.test.models.SomeCommonTrait
typeArgs = List()
avrocontext lookup(String) com.banno.salat.avro.test.models.SomeCommonTrait
Some($anonfun$lookup_$qmark$1$$anon$2(interface com.banno.salat.avro.test.models.SomeCommonTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
in context: Some($anonfun$lookup_$qmark$1$$anon$2(interface com.banno.salat.avro.test.models.SomeCommonTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
avrocontext lookup(String) com.banno.salat.avro.test.models.SomeCommonTrait
Some($anonfun$lookup_$qmark$1$$anon$2(interface com.banno.salat.avro.test.models.SomeCommonTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
avro typematchers istraversable unapply TypeRefType(ThisType(com.banno.salat.avro.test.models),com.banno.salat.avro.test.models.SomeCommonTrait,List())
avro typematchers  matchesTraversable TypeRefType(ThisType(com.banno.salat.avro.test.models),com.banno.salat.avro.test.models.SomeCommonTrait,List())
avro typematchers matchesTraversable found none 
avro proxyavrograter asSingleAvroGrater was called 
ProxyAvroGrater knownSubclassGraters
proxy knownsub interface com.banno.salat.avro.test.models.SomeCommonTrait com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait
proxy knownsub interface com.banno.salat.avro.test.models.SomeCommonTrait com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait
proxyavro knownSubclassGraters: List($anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93), $anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
proxyavro knownSubclassGraters Mapped: 
ProxyAvroGrater knownSubclassGraters
proxy knownsub interface com.banno.salat.avro.test.models.SomeCommonTrait com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait
proxy knownsub interface com.banno.salat.avro.test.models.SomeCommonTrait com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait
made a singleAvroSchema
avro schema schemaFor
avro schema schemaFields from grater $anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93)
avro _indexedFields ClassSymbol(SomeSubclassExtendingSaidTrait, owner=com.banno.salat.avro.test.models, flags=40, info=15 ,None)
MethodSymbol(b, owner=0, flags=29400200, info=42 ,None) 0
(com.banno.salat.avro.test.models.SomeCommonTrait,$anonfun$lookup_$qmark$1$$anon$2(interface com.banno.salat.avro.test.models.SomeCommonTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.ManyTrees,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.SomeContainerClass,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.SomeContainerClass @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.End,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
wasn't suitable
avro schema schemaTypeFor
avro schema gonna match path scala.Int
typeRef = TypeRefType(ThisType(scala),scala.Int,List())
symbol = scala.Int
symbol.path = scala.Int
typeArgs = List()
avrocontext lookup(String) scala.Int
None
in context: None
avrocontext lookup(String) scala.Int
None
made a singleAvroSchema
avro schema schemaFor
avro schema schemaFields from grater $anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93)
avro _indexedFields ClassSymbol(AnotherSubclassExtendingSaidTrait, owner=com.banno.salat.avro.test.models, flags=40, info=15 ,None)
MethodSymbol(d, owner=0, flags=29400200, info=42 ,None) 0
(com.banno.salat.avro.test.models.SomeCommonTrait,$anonfun$lookup_$qmark$1$$anon$2(interface com.banno.salat.avro.test.models.SomeCommonTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.ManyTrees,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.SomeContainerClass,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.SomeContainerClass @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.End,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
wasn't suitable
(com.banno.salat.avro.test.models.SomeCommonTrait,$anonfun$lookup_$qmark$1$$anon$2(interface com.banno.salat.avro.test.models.SomeCommonTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.ManyTrees,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.ManyTrees @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.Node,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.Node @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.SomeSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(models.MyRecord,$anonfun$lookup_$qmark$1$$anon$1(class models.MyRecord @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.SomeContainerClass,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.SomeContainerClass @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.End,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.End @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
(com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait,$anonfun$lookup_$qmark$1$$anon$1(class com.banno.salat.avro.test.models.AnotherSubclassExtendingSaidTrait @ com.banno.salat.avro.global.package$$anon$1@1f60cd93))
wasn't suitable
avro schema schemaTypeFor
avro schema gonna match path scala.Double
typeRef = TypeRefType(ThisType(scala),scala.Double,List())
symbol = scala.Double
symbol.path = scala.Double
typeArgs = List()
avrocontext lookup(String) scala.Double
None
in context: None
avrocontext lookup(String) scala.Double
None
[0m[[32msuccess[0m] [0mTotal time: 23 s, completed Nov 23, 2013 12:27:54 AM[0m
